# Препроцесиране
Обработват се '#include', '#define' и други препроцесорни директиви. 
След този етап `.i` файлът съдържа изходния код с включени всички заглавни файлове и без макроси.

# Компилиране до асемблерен код
Тук C++ кодът се превръща в асемблерен код, който все още е четим и може да се разглежда с текстов редактор.

# Компилиране до обектен код
На този етап се генерира машинен код за процесора. 
Обектните файлове (например `.o`) са междинен етап и съдържат машинен код, но не са самостоятелни изпълними файлове. 
Те трябва да бъдат свързани (линкнати), за да се създаде пълна програма.

# Линкване
Свързват се обектните файлове и се генерира изпълним файл.


# Препроцесиране
Изпълняват се препроцесорните директиви на този етап
g++ -E program.cpp -o program.i

# Компилиране до асемблерен код
Това е компилацията до assembly code
g++ -S program.cpp -o program.s

# Компилиране до обектен код:
Асемблиране на програмата в машинен код
g++ -c program.cpp -o program.o

# Препроцесиране на swap.cpp
g++ -E swap.cpp -o swap.i

# Компилиране до асемблерен код на swap.cpp:
g++ -S swap.cpp -o swap.s

# Компилиране до обектен код на swap.cpp:
g++ -c swap.cpp -o swap.o

# Линкване - последна стъпка:
Свързване на обектните файлове и генериране на изпълним файл
g++ program.o swap.o -o program

# Изпълнение - стартиране на програмата
./program
